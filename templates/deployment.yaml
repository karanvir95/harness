apiVersion: v1
kind: ConfigMap
metadata:
  name: {{.Values.name}}-config
data:
  dbUsername: {{.Values.env.config.dbUsername}}
---
apiVersion: v1
kind: Secret
metadata:
  name: {{.Values.name}}
stringData:
{{.Values.env.secrets | toYaml | indent 2}}
---
{{- if .Values.createImagePullSecret}}
apiVersion: v1
kind: Secret
metadata:
  name: {{.Values.name}}-dockercfg
  annotations:
    harness.io/skip-versioning: true
data:
  .dockercfg: {{.Values.dockercfg}}
type: kubernetes.io/dockercfg
{{- end}}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{.Values.name}}-deployment
spec:
  replicas: {{int .Values.replicas}}
  selector:
    matchLabels:
      app: {{.Values.name}}
  template:
    metadata:
      labels:
        app: {{.Values.name}}
    spec:
      {{- if .Values.createImagePullSecret}}
      imagePullSecrets:
      - name: {{.Values.name}}-dockercfg
      {{- end}}
      containers:
      - name: {{.Values.name}}
        image: {{.Values.image}}
        envFrom:
        - configMapRef:
            name: {{.Values.name}}-config
        - secretRef:
            name: {{.Values.name}}
        resources:
          limits:
            memory: 1024Mi
            cpu: 100m
          requests:
            memory: 1024Mi
            cpu: 100m
        ports:
        - name: todolist
          containerPort: 8080
          protocol: "TCP"
